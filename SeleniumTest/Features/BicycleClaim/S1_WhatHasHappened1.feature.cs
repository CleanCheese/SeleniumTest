// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SeleniumTest.Features.BicycleClaim
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("BicycleClaimsForm WhatHasHappened Section")]
    public partial class BicycleClaimsFormWhatHasHappenedSectionFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "S1_WhatHasHappened.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "BicycleClaimsForm WhatHasHappened Section", "\tIn order to verify that the 1st section works properly\r\n\tI want to change values" +
                    " for all section 1 elements\r\n\tAnd check if the fields are filled properly", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("S1 - Verify radio button")]
        [NUnit.Framework.TestCaseAttribute("1st btn", "Bicycle or parts of it have been stolen", "Bicycle has been vandalized", "Bicycle has got broken", "Bicycle has been damaged in a collision with a motor vehicle", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2nd btn", "Bicycle has been vandalized", "Bicycle or parts of it have been stolen", "Bicycle has got broken", "Bicycle has been damaged in a collision with a motor vehicle", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3rd btn", "Bicycle has got broken", "Bicycle or parts of it have been stolen", "Bicycle has been vandalized", "Bicycle has been damaged in a collision with a motor vehicle", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4th btn", "Bicycle has been damaged in a collision with a motor vehicle", "Bicycle or parts of it have been stolen", "Bicycle has been vandalized", "Bicycle has got broken", new string[0])]
        public virtual void S1_VerifyRadioButton(string version, string radioButton1, string radioButton2, string radioButton3, string radioButton4, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("S1 - Verify radio button", exampleTags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have opened \"BicycleClaimForm\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When(string.Format("I click \"{0}\" radio button", radioButton1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then(string.Format("\"{0}\" radio button is selected", radioButton1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.And(string.Format("\"{0}\" radio button is unselected", radioButton2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And(string.Format("\"{0}\" radio button is unselected", radioButton3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And(string.Format("\"{0}\" radio button is unselected", radioButton4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("S1 - Fill all fields")]
        public virtual void S1_FillAllFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("S1 - Fill all fields", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I have opened \"BicycleClaimForm\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
 testRunner.When("I click \"Bicycle or parts of it have been stolen\" radio button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("I enter \"05.10.2016\" in field When did the incident happen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("I enter \"Egypti\" in field Country", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I enter \"City 1, street 1\" in field Street address or place", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I enter \"Stuff happened\" in field Describe in details what has happened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.Then("I wait for \"5\" seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
